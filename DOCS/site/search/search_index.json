{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the LexiTrain documentation!","text":""},{"location":"#get-started","title":"Get Started","text":"<p>To create a training plan, a period file must be created. This can be viewed at period file</p> <p>LexiTrain files can be created in plain text and saved as <code>.lt</code> file (period) or <code>.slt</code> file (session)</p> <p>Period files can be written and compiled in the LexiTrain based web calender at www.LexiTrain.com/calendar</p> <p></p> Happy Training :)"},{"location":"PeriodFile/","title":"Period File","text":"<p>A period file is the main file in a LexiTrain training plan. The period file is used to describe all the training for the given training plan, split into different periods or mesocycles. </p> <p>A period file is made up of three parts.  These are: metadata, session imports, and periods.</p> <p>A period file is saved with a <code>.lt</code> file extension.  For example: <code>meso_3.lt</code></p>"},{"location":"PeriodFile/#comments","title":"Comments","text":"<p>Comments can be included in a period file with a <code>//</code>. Any text after the <code>//</code> on the same line is ignored when the file is compiled. Comments can be used to annotate parts of the code that only the author (or anyone with access to the source files can see).</p>"},{"location":"PeriodFile/#example-comment","title":"Example Comment","text":"<p><code>//this is a comment! Hello World</code></p>"},{"location":"PeriodFile/#metadata","title":"Metadata","text":"<p>Metadata: information about the file Metadata is written at the top of the period file and should include important  information about the session. Metadata lines are made up of two parts. The tags and data.  Tags are not case sensitive.  Data must be in WORD format</p>"},{"location":"PeriodFile/#valid-metadata-tags","title":"Valid Metadata Tags","text":"<p>File name (<code>title</code>) Author (<code>author</code>)  Date written (<code>date</code>) Starting date (<code>start_date</code>) Ending date (<code>date_date</code>)</p>"},{"location":"PeriodFile/#training-plan-start-date","title":"Training Plan Start Date","text":"<p>Both start and end date are not supported. If no date is set, the first named day is in the period file and the start date is the next found instance of that named day from current date. In the case that the period file contains no named days or any date metadata, the start day is the current day.</p>"},{"location":"PeriodFile/#example-metadata","title":"Example Metadata","text":"<pre><code>title: \"over unders\".\nsport: cycling.\nauthor: \"Dylan Barratt\".\n</code></pre>"},{"location":"PeriodFile/#importing-session-files","title":"Importing Session Files","text":"<p>A session file describes a single workout in the training plan.  It is written in a seperate file and must be imported at the top of the period file  <code>import \"session name\".</code> The keyword <code>import</code> must be lower case The session name is a WORD. The session import line is ended by a <code>.</code></p>"},{"location":"PeriodFile/#periods","title":"Periods","text":"<p>A period is a week (microcycle) in the training plan. It contains all the days to be completed that week A period file can contain any non-zero number of periods.  A period must be given a name using a WORD.  The period's days are then written between <code>{}</code></p>"},{"location":"PeriodFile/#example-period","title":"Example Period","text":"<pre><code>\"week 1\" {\n    Tue: (bike) 4hr &lt; HRZ3 note=\"long ride road\",\n    Wed: (swim) 30min load=20 note=\"swim lesson\",\n    Thu: [run_base],\n    (swim) 1hr30min load=70 note=\"long swim\",\n    Sat: (swim) 1hr load=40 note=\"tech swim\" &amp;&amp; (bike) 1hr30min HRZ2,\n}\n</code></pre> <p>In the example the period is named <code>week 1</code></p>"},{"location":"PeriodFile/#day-types","title":"Day Types","text":"<p>A day is one part of a period. It contains the sessions to be completed in that day.  There are three types of days:  Specified - A specified day is given a day of the week that it corresponds to. This day is a WORD and must be in a specific format:  (not case sensitive)  Monday, Mon  Tuesday, Tue  Wednesday, Wed  Thursday, Thu  Friday, Fri  Saturday, Sat Sunday, Sun  Example: <code>Tue: (bike) 4hr &lt; HRZ3 note=\"long ride road\"</code></p> <p>Unspecified - An unspecified day is for the athlete to decide what day to complete the given set of sessions on. In compilation this is put in an any section Example: <code>(swim) 1hr30min load=70 note=\"long swim\"</code></p> <p>Unspecified Loop - An unsepcified loop is a repeat of unspecified days. For example if the athlete is to complete three one hour runs in a week it can be written as: <code>3 * {(run) 1hr HRZ2}</code></p> <p>Days in a period are seperated by a comma (<code>,</code>) including the last day.</p>"},{"location":"PeriodFile/#day-data","title":"Day Data","text":"<p>A day can contain multiple day data entries. For example two sessions. Day data is seperated with <code>&amp;&amp;</code>.  Day data can be one of four types:</p> <p>Imported - an imported session references one of the sessions imported at the top of the session file. The syntax is the imported name surronded by <code>[]</code>. Example: <code>[run_base]</code></p> <p>Workout - a workout is a single line session. This includes a supported sport, sytnatically <code>(WORD)</code> e.g. <code>(run)</code>; a session workload; an optional load <code>load=</code>NUM; and an optional note <code>note=</code> WORD. Example: <code>(bike) 4hr &lt; HRZ3 load=140 note=\"long ride road\"</code></p> <p>Session - a session is an inline version of a session file see that page for the syntax</p> <p>Notes - a note is a place the author can tell the athlete something on a day. <code>note=</code>WORD</p>"},{"location":"PeriodFile/#supported-sports","title":"Supported Sports","text":"<p>(not case sensitive) Swimming - 'swimming' 'swim' 'pool' Cycling  - 'cycling' 'cycle' 'bike' 'biking' Triathlon - 'triathlon' 'tri'  Duathlon  - 'duathlon'  Running - 'running' 'run' Walking 'walking' 'walk' Gym - 'gym' 'strength' 'strength training' Other - 'other' Note - 'note'</p>"},{"location":"PeriodFile/#workloads","title":"Workloads","text":"<p>A workload is made up of duration and intensity. It is described by a unit of time and optionally a range from the accepted zones. The supported workloads are:  No intensity - just a unit of time Less than - <code>&lt;</code> a zone Greater than - <code>&gt;</code> a zone Between - zone <code>-</code> zone At - unit of time zone</p>"},{"location":"PeriodFile/#time-formats","title":"Time Formats","text":"<p>Case ignored, whitespace ignored NUM hours/hour/hrs/hr NUM minutes/minute/mins/min</p>"},{"location":"PeriodFile/#zones","title":"Zones","text":"<p>capitalisation ignored Power Zones PWZ1, PWZ2, PWZ3, PWZ4, PWZ5, PWZ6, PWZ7 Also valid formats: PowerZone1, ...</p> <p>Heart Rate Zones HRZ1, HRZ2, HRZ3, HRZ4, HRZ5 Also valid formats: HeartRateZone1, ...</p> <p>LT Zones LTZ1, LTZ2, LTZ3 Also valid formats: LactateThresholdZone1, ...</p>"},{"location":"PeriodFile/#example-period-file","title":"Example Period File","text":"<pre><code>//metadata\ntitle: \"IM meso 3\".\nauthor: \"Dylan Barratt\".\n\n//session imports\nimport run_base.\n\n//periods\n\"week 1\" {\n    Tue: (bike) 4hr &lt; HRZ3 note=\"long ride road\",\n    Wed: (swim) 30min load=20 note=\"swim lesson\",\n    Thu: [run_base],\n    Sun: (run) 2hr30min &lt; HRZ3 note=\"long run\"\n}\n\n\n\"week 2\" {\n    Mon: note=\"Wow cool note!!\",\n    Wed: (tri) 60min load=60 note=\"Varsity Race!\",\n    Thu: [run_base],\n    Fri: (swim) 1hr30min load=70 note=\"long swim\",\n    Sun: (run) 2hr30min &lt; HRZ3 note=\"long run\"\n}\n\nloop_week {\n    3 * {(run) 1hr HRZ2}\n}\n</code></pre>"},{"location":"SessionFile/","title":"Session File","text":"<p>A session file describes a single session in a training plan.  It is imported as detailed here.</p> <p>A session file contains metadata and a list of sections</p> <p>A session file is saved with the <code>.slt</code> file extension.  For example <code>run_base.slt</code></p>"},{"location":"SessionFile/#metadata","title":"Metadata","text":"<p>Metadata: information about the file</p> <p>The format for metadata is the same as in a period file. </p> <p>Metadata is written at the top of the session file and should include important  information about the session. Metadata lines are made up of two parts. The tags and data.  Tags are not case sensitive.  Data must be in WORD format</p>"},{"location":"SessionFile/#valid-metadata-tags","title":"Valid Metadata Tags","text":"<p>(Different from period file tags)</p> <p>File name. Must match import name (<code>title</code>)  Author (<code>author</code>)  session's sport (<code>sport</code>) (required, must be in valid sport format)  session's load (<code>load</code>)  Session notes (<code>note</code>) </p>"},{"location":"SessionFile/#sections","title":"Sections","text":"<p>A section is a named part of a session. For example the session warmup.  The syntax is WORD followed by <code>{}</code> containing the section's contents and an optional note (<code>note=</code>WORD).</p>"},{"location":"SessionFile/#section-content","title":"Section Content","text":"<p>A section is made up of workloads.  Workloads are seperated by <code>&amp;&amp;</code>.  Workloads can be repeated by surronding the workload with <code>{}</code> and writing NUM <code>*</code> before.  Workload example:  <code>60min HRZ2</code></p> <p>Workload repeat example:  <code>5*{3min HRZ5 &amp;&amp; 5min &lt; HRZ3}</code></p>"},{"location":"SessionFile/#session-example","title":"Session Example","text":"<pre><code>title: \"run base\".\nsport: \"running\".\nauthor: \"Dylan Barratt\".\nload: 50.\n\nwarmup {\n    15min HRZ1\n}\n\nmain {\n    45min &lt; HRZ3\n} \n\nnote=\"include some strides\"\n\"cool down w/ strides\" {\n    15min &lt; HRZ2\n}\n</code></pre>"},{"location":"Tokens/","title":"Tokens","text":"<p>A token is a recognized string format in the LexiTrain code. </p>"},{"location":"Tokens/#word","title":"WORD","text":"<p>A WORD can be in two formats.   A single set of characters with no spaces. For example <code>HelloWorld!</code> A set of characters surronded by <code>\"\"</code> with spaces. For example <code>Hello World!</code></p>"},{"location":"Tokens/#num","title":"NUM","text":"<p>A NUM is a positive whole number. For example <code>99</code></p>"}]}